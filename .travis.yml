# Android language used because it installs Android SDK required by DroidMate.
os:
  - linux
#  - osx

sudo: false

language: android

env:
  global:

    # Required to obtain reference to jarsigner.
    - JAVA_HOME=/usr/lib/jvm/java-8-oracle

    # Required to obtain handles to aapt and adb.
    - ANDROID_HOME=/usr/local/android-sdk

    - DROIDMATE_AVD_NAME=droidmate

  matrix:
    # DroidMate supports Android API 23 (6.0.1).
    # ARM
    - DROIDMATE_ANDROID_TARGET=23 DROIDMATE_ANDROID_SDK=android-$DROIDMATE_ANDROID_TARGET DROIDMATE_ANDROID_ABI=armeabi-v7a DROIDMATE_ANDROID_ABI_AVD="google_apis/$ANDROID_ABI"
    # x86_64
    # - DROIDMATE_ANDROID_TARGET=23 DROIDMATE_ANDROID_SDK=android-$DROIDMATE_ANDROID_TARGET DROIDMATE_ANDROID_ABI=x86_64 DROIDMATE_ANDROID_ABI_AVD="google_apis/$ANDROID_ABI"

addons:
  apt:
    packages:
      # Required by org.droidmate.report.plot()
      - gnuplot

git:
  # To speed up things. By default it is 50.
  depth: 1

jdk:

  # Most of DroidMate is compiled with Java 8.
  - oraclejdk8

android:
  components:

    # Build tools
    # Tools package is required by Travis-CI in order to locate "build-tools",
    # Official bugtracker issue: https://github.com/travis-ci/travis-ci/issues/5036
    # More info: https://docs.travis-ci.com/user/languages/android/#Overview
    - tools
    - platform-tools
    # Upgrade again after upgrading platform-tools
    - tools
    - build-tools-26.0.2
    # Packages required by UIAutomator2
    - extra-android-support
    - extra-android-m2repository
    # Others
    - extra-google-m2repository
    - extra-google-google_play_services

    # DroidMate supports Android API 23 (6.0.1).
    - $DROIDMATE_ANDROID_SDK
    - sys-img-$DROIDMATE_ANDROID_ABI-$DROIDMATE_ANDROID_SDK
    - sys-img-$DROIDMATE_ANDROID_ABI-google_apis-$DROIDMATE_ANDROID_TARGET
    - sys-img-$DROIDMATE_ANDROID_ABI-addon-google_apis-google-$DROIDMATE_ANDROID_TARGET
    - android-25
    - android-26

before_install:

  # Change to the directory containing the main build script of DroidMate.
  # - cd dev/droidmate

  # Allow Gradle build script to execute.
  - chmod +x gradlew
  # By default, 'android' language uses 'connectedCheck'. Here we replace it with appropriate task.
  - ./gradlew build install
  - ./gradlew shadowJar
  - cp ./project/pcComponents/API/build/libs/*.jar .

  # copy the apk
  - wget -qq -O ./apks/TippyTipper-debug.apk  https://software.imdea.org/cloud/index.php/s/z7K9ZCrjSo05Jbi/download

before_cache:

  # Allow Gradle to use cache.
  - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock

cache:
  directories:

    # Cache gradle dirs.
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/

    # Note: Android SDK should not be cached, according to https://docs.travis-ci.com/user/caching/#Things-not-to-cache
    # - $HOME/.android/build-cache

before_script:
    # Default
    - android create avd --help
    - echo no | android create avd --force -n $DROIDMATE_AVD_NAME -t $DROIDMATE_ANDROID_SDK --abi $DROIDMATE_ANDROID_ABI_AVD
    # nexus72013_23_GAPPS_ARM
    # - echo no | android create avd --force -n $DROIDMATE_AVD_NAME -t android-23 --abi "google_apis/armeabi-v7a" -d "Nexus 7 2013" --skin "WSVGA"
    # nexus5_23_GAPPS_x86-64
    # - echo no | android create avd --force -n $DROIDMATE_AVD_NAME -t android-23 --abi "google_apis/x86_64" -d "Nexus 5" --skin "WXGA800"

    - emulator -avd $DROIDMATE_AVD_NAME -no-skin -no-audio -no-window &
    # TOCHECK: - emulator -verbose -debug-all -avd $DROIDMATE_AVD_NAME -no-boot-anim -no-audio -no-window &> emu.log &

    - travis_wait 30 android-wait-for-emulator
    - adb shell input keyevent 82 &

script:
    # Run droidmate 300 secs
    - java -jar shadow-1.0-RC1-all.jar --Selectors-timeLimit=300 &> tool_run.log

after_script:
    - cat emu.log
    - cat tool_run.log
